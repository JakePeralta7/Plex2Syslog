name: Build and Publish Docker Image

on:
  push:
    branches: [ "main", "master" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch: # Allow manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest requests
    
    - name: Test application
      run: |
        python -c "import app; print('App imports successfully')"
        python -c "
        import app
        import json
        
        # Test the format_plex_event function
        test_payload = {
            'event': 'media.play',
            'Account': {'title': 'TestUser'},
            'Server': {'title': 'TestServer'},
            'Metadata': {'title': 'Test Movie', 'type': 'movie'},
            'Player': {'title': 'Test Player'}
        }
        
        result = app.format_plex_event(test_payload)
        print('Format test passed:', result)
        assert 'media.play' in result
        assert 'TestUser' in result
        print('All tests passed!')
        "

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      if: github.event_name == 'pull_request'
      run: |
        docker run --rm -d --name test-container -p 8080:8080 -e SYSLOG_HOST=localhost ${{ steps.meta.outputs.tags }}
        sleep 10
        curl -f http://localhost:8080/health || exit 1
        curl -f http://localhost:8080/ || exit 1
        docker stop test-container
